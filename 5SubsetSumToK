Intution:------> MAIN CODE IS BELOW
int solve(int A[], int n, int k, int i, int sum){
  //Base condition
  if(i==n){
    if(sum==k)  return 1;
    else return 0;
  }
  
  //Recursive Condition
  int opt1 = solve(A, n, k, i+1, sum+A[i]);
  int opt1 = solve(A, n, k, i+1, sum+);
  
  return opt1+opt2;
}

int subsetSum(int A[], int n, int k)
{
  int ans=solve(A, n, k, 0, 0);
  print(ans);
}

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#include<iostream>
using namespace std;

int subsetCount(int arr[], int n, int index, int target){
    if(index==n){
        if(target==0){
            return 1;
        }
        else{
            return 0;
        }
    }
    int count=0;
    if(target-arr[index]>=0){
        count+=subsetCount(arr, n, index+1, target -arr[index]);
    }
    count+=subsetCount(arr, n, index+1, target);
    return count;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        int n,k;
        cin>>n>>k;
        int arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        cout<<subsetCount(arr,n, 0, k)<<endl;
    }
}

  
